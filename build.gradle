// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.4.31'
    ext.coroutines_version = '1.4.3'
    ext.nav_version = '2.3.4'
    ext.compose_version = '1.0.0-beta03'
    ext.nav_compose_version = '1.0.0-alpha09'
    ext.koin_version = '3.0.1-beta-1'
    ext.objectbox_version = '2.9.1'
    ext.mapstruct_version = '1.4.2.Final'
    ext.slf4j_version = '1.7.30'
    ext.logback_version = '2.14.0'

    repositories {
        google()
        mavenCentral()
        jcenter() // To be removed when compose no longuer depend on kotlinx-collections-immutable-jvm:0.3.3
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.0-alpha14'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.objectbox:objectbox-gradle-plugin:$objectbox_version"
    }
}

plugins {
    id 'com.diffplug.spotless' version '5.10.2'
    id 'net.researchgate.release' version '2.8.1'
}

subprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    // Apply spotless plugin on all sub project (Clean code)
    apply plugin: 'com.diffplug.spotless'
    spotless {
        kotlin {
            target '**/*.kt'
            targetExclude("$buildDir/**/*.kt")
            targetExclude('bin/**/*.kt')

            ktlint('0.40.0')
            licenseHeaderFile rootProject.file('spotless/copyright.kt')
        }
    }

    // Enable advanced kotlin option and experimental ones
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Treat all Kotlin warnings as errors (to have the better code possible)
            allWarningsAsErrors = true

            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
            freeCompilerArgs += '-Xopt-in=kotlin.Experimental'
            freeCompilerArgs += '-Xallow-jvm-ir-dependencies'

            // Allow unstable dependencies
            freeCompilerArgs += '-Xskip-prerelease-check'

            // User the new IR compiler
            useIR = true

            // Set JVM target to 1.8
            jvmTarget = "1.8"
        }
    }
}

// After a successful release, we build and bundle our app
afterReleaseBuild.dependsOn('clean', ':app:build', ':app:bundle')